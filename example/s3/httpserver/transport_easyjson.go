// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package httpserver

import (
	json "encoding/json"
	_v1 "github.com/wildberries-ru/go-transport-generator/example/api/v1"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver(in *jlexer.Lexer, out *uploadPartDocumentTransport) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver(out *jwriter.Writer, in uploadPartDocumentTransport) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v uploadPartDocumentTransport) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v uploadPartDocumentTransport) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *uploadPartDocumentTransport) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *uploadPartDocumentTransport) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver(l, v)
}
func easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver1(in *jlexer.Lexer, out *uploadPartDocumentRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Document":
			if in.IsNull() {
				in.Skip()
				out.Document = nil
			} else {
				out.Document = in.Bytes()
			}
		case "PartNumber":
			out.PartNumber = int64(in.Int64())
		case "UploadID":
			out.UploadID = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver1(out *jwriter.Writer, in uploadPartDocumentRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Document\":"
		out.RawString(prefix[1:])
		out.Base64Bytes(in.Document)
	}
	{
		const prefix string = ",\"PartNumber\":"
		out.RawString(prefix)
		out.Int64(int64(in.PartNumber))
	}
	{
		const prefix string = ",\"UploadID\":"
		out.RawString(prefix)
		out.String(string(in.UploadID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v uploadPartDocumentRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v uploadPartDocumentRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *uploadPartDocumentRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *uploadPartDocumentRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver1(l, v)
}
func easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver2(in *jlexer.Lexer, out *uploadDocumentTransport) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver2(out *jwriter.Writer, in uploadDocumentTransport) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v uploadDocumentTransport) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v uploadDocumentTransport) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *uploadDocumentTransport) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *uploadDocumentTransport) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver2(l, v)
}
func easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver3(in *jlexer.Lexer, out *uploadDocumentRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Document":
			if in.IsNull() {
				in.Skip()
				out.Document = nil
			} else {
				out.Document = in.Bytes()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver3(out *jwriter.Writer, in uploadDocumentRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Document\":"
		out.RawString(prefix[1:])
		out.Base64Bytes(in.Document)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v uploadDocumentRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v uploadDocumentRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *uploadDocumentRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *uploadDocumentRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver3(l, v)
}
func easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver4(in *jlexer.Lexer, out *downloadDocumentTransport) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver4(out *jwriter.Writer, in downloadDocumentTransport) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v downloadDocumentTransport) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v downloadDocumentTransport) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *downloadDocumentTransport) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *downloadDocumentTransport) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver4(l, v)
}
func easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver5(in *jlexer.Lexer, out *downloadDocumentResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Document":
			if in.IsNull() {
				in.Skip()
				out.Document = nil
			} else {
				out.Document = in.Bytes()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver5(out *jwriter.Writer, in downloadDocumentResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Document\":"
		out.RawString(prefix[1:])
		out.Base64Bytes(in.Document)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v downloadDocumentResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v downloadDocumentResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *downloadDocumentResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *downloadDocumentResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver5(l, v)
}
func easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver6(in *jlexer.Lexer, out *createMultipartUploadTransport) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver6(out *jwriter.Writer, in createMultipartUploadTransport) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v createMultipartUploadTransport) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v createMultipartUploadTransport) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *createMultipartUploadTransport) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *createMultipartUploadTransport) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver6(l, v)
}
func easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver7(in *jlexer.Lexer, out *createMultipartUploadResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "additionalErrors":
			if in.IsNull() {
				in.Skip()
				out.AdditionalErrors = nil
			} else {
				if out.AdditionalErrors == nil {
					out.AdditionalErrors = new(_v1.AdditionalErrors)
				}
				easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleApiV1(in, out.AdditionalErrors)
			}
		case "data":
			easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleApiV11(in, &out.Data)
		case "error":
			out.ErrorFlag = bool(in.Bool())
		case "errorText":
			out.ErrorText = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver7(out *jwriter.Writer, in createMultipartUploadResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"additionalErrors\":"
		out.RawString(prefix[1:])
		if in.AdditionalErrors == nil {
			out.RawString("null")
		} else {
			easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleApiV1(out, *in.AdditionalErrors)
		}
	}
	{
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleApiV11(out, in.Data)
	}
	{
		const prefix string = ",\"error\":"
		out.RawString(prefix)
		out.Bool(bool(in.ErrorFlag))
	}
	{
		const prefix string = ",\"errorText\":"
		out.RawString(prefix)
		out.String(string(in.ErrorText))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v createMultipartUploadResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v createMultipartUploadResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *createMultipartUploadResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *createMultipartUploadResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver7(l, v)
}
func easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleApiV11(in *jlexer.Lexer, out *_v1.CreateMultipartUploadData) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "some":
			out.Some = int(in.Int())
		case "upload_id":
			out.UploadID = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleApiV11(out *jwriter.Writer, in _v1.CreateMultipartUploadData) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"some\":"
		out.RawString(prefix[1:])
		out.Int(int(in.Some))
	}
	{
		const prefix string = ",\"upload_id\":"
		out.RawString(prefix)
		out.String(string(in.UploadID))
	}
	out.RawByte('}')
}
func easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleApiV1(in *jlexer.Lexer, out *_v1.AdditionalErrors) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
		case "lastName":
			out.LastName = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleApiV1(out *jwriter.Writer, in _v1.AdditionalErrors) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"lastName\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	out.RawByte('}')
}
func easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver8(in *jlexer.Lexer, out *completeUploadTransport) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver8(out *jwriter.Writer, in completeUploadTransport) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v completeUploadTransport) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v completeUploadTransport) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *completeUploadTransport) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *completeUploadTransport) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver8(l, v)
}
func easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver9(in *jlexer.Lexer, out *completeUploadRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "UploadID":
			out.UploadID = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver9(out *jwriter.Writer, in completeUploadRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"UploadID\":"
		out.RawString(prefix[1:])
		out.String(string(in.UploadID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v completeUploadRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v completeUploadRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC87d08bdEncodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *completeUploadRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *completeUploadRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC87d08bdDecodeGitWildberriesRuInfrastructureGoTransportGeneratorExampleS3Httpserver9(l, v)
}
